name: release-python-gpu

on:
  push:
    branches: [main]
    # tags:
    #   - '*'


jobs:
  build_wheels:
    name: ${{ matrix.arch }} ${{ matrix.build }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - { os: ubuntu-20.04, arch: x86_64,     build: 'cp*-manylinux*' }
          # - { os: ubuntu-20.04, arch: x86_64,     build: 'cp*-musllinux*' }
          # - { os: ubuntu-20.04, arch: x86_64,     build: 'pp*'            }
          # - { os: ubuntu-20.04, arch: i686,       build: 'cp*-manylinux*' }
          # - { os: ubuntu-20.04, arch: i686,       build: 'cp*-musllinux*' }
          # - { os: ubuntu-20.04, arch: i686,       build: 'pp*'            }
          # - { os: windows-2019, arch: x86,        build: 'cp*'            }
          # - { os: windows-2019, arch: AMD64,      build: 'cp*'            }
          # - { os: windows-2019, arch: AMD64,      build: 'pp*'            }
          # - { os: windows-2019, arch: ARM64,      build: 'cp*'            }
          # - { os: macos-latest, arch: x86_64,     build: 'cp*'            }
          # - { os: macos-latest, arch: x86_64,     build: 'pp*'            }
          # - { os: macos-latest, arch: arm64,      build: 'cp*'            }
          # - { os: macos-latest, arch: universal2, build: 'cp*'            }

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      
      - name: init submodules
        shell: bash
        run: |
          cd ncnn-python-gpu
          git submodule update --init
          cd python
          git submodule update --init

      - uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      # - name: check submodules
      #   shell: bash
      #   run: |
      #       cd ncnn-python-gpu
      #       ls -lh glslang
      #       cd python
      #       ls -lh pybind11
  
      - name: brew uninstall libomp
        if: matrix.os == 'macos-latest'
        run: |
          brew uninstall --ignore-dependencies libomp

      # - name: Prepare Vulkan SDK
      #   uses: humbletim/setup-vulkan-sdk@v1.2.0
      #   with:
      #     vulkan-query-version: 1.3.250.0
      #     vulkan-components: Vulkan-Headers, Vulkan-Loader
      #     vulkan-use-cache: true
      

      # - id: verify-vulkan
      #   name: Verify Vulkan SDK Install
      #   shell: bash
      #   run: |
      #     echo "Vulkan_SDK_Version='$VULKAN_SDK_VERSION'" >> "$GITHUB_OUTPUT"
      #     echo "VULKAN_SDK='$VULKAN_SDK'" >> "$GITHUB_OUTPUT"
      #     echo "VULKAN_SDK='$VULKAN_SDK'" >> "$GITHUB_OUTPUT"

      # - name: show Vulkan
      #   shell: bash
      #   run: |
      #     cd $VULKAN_SDK
      #     ls
      #     echo " "
      #     cd share
      #     ls
      #     echo " "
      #     ls -lh cmake
      #     echo " "
      #     ls -lh vulkan
      #     echo " "

      # - name: list the vulkan dir
      #   shell: bash
      #   run: |
      #     cd VULKAN_SDK
      #     ls
      #     echo ''
      #     cd ./include/vulkan 
      #     ls
      #     echo ''

      # - name: find pkgconfig
      #   shell: bash
      #   run: find / -name pkgconfig
          
      - name: Build wheels
        if: matrix.os == 'ubuntu-20.04'
        uses: pypa/cibuildwheel@v2.15.0
        env:
          CIBW_ARCHS_MACOS: ${{ matrix.arch }}
          CIBW_ARCHS_LINUX: ${{ matrix.arch }}
          CIBW_ARCHS_WINDOWS: ${{ matrix.arch }}
          CIBW_BUILD: ${{ matrix.build }}
          CIBW_BUILD_VERBOSITY: 1
          CIBW_ENVIRONMENT: CMAKE_BUILD_PARALLEL_LEVEL=2 NCNN_VULKAN=TRUE NCNN_CI_VULKAN=FALSE # VULKAN_SDK=${{steps.verify-vulkan.outputs.VULKAN_SDK}}
          CIVW_BEFORE_BUILD: sudo apt install build-essential git cmake libprotobuf-dev protobuf-compiler libvulkan-dev vulkan-utils libopencv-dev
        with:
          package-dir: ./ncnn-python-gpu
          output-dir: wheelhouse

      # - name: Show files
      #   run: ls -lh wheelhouse
      #   shell: bash

      # - name: Verify clean directory
      #   run: git diff --exit-code
      #   shell: bash

      # - name: Upload wheels
      #   uses: actions/upload-artifact@v3
      #   with:
      #     path: wheelhouse/*.whl
        
