name: container test
on:
  push:
    branches: [main]

jobs:
  windows-build:
    name: windows image test
    runs-on: ubuntu-latest
    container:
      image: dockcross/windows-x86
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      
      - name: init submodules
        shell: bash
        run: |
          cd ncnn-python-gpu
          git submodule update --init
          cd python
          git submodule update --init

      - uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: add pipx path
        shell: bash 
        run: |
          python3 -m pipx ensurepath --force

      - name: Build wheels for windows x86
        uses: pypa/cibuildwheel@v2.15.0
        env:
          CIBW_ARCHS_MACOS: ${{ matrix.arch }}
          CIBW_ARCHS_LINUX: ${{ matrix.arch }}
          CIBW_ARCHS_WINDOWS: ${{ matrix.arch }}
          CIBW_BUILD: ${{ matrix.build }}
          CIBW_BUILD_VERBOSITY: 1
          CIBW_ENVIRONMENT_WINDOWS: >
                            PATH="D:\\a\\ncnn-gpu-pre-verification\\ncnn-gpu-pre-verification\\Vulkan-Loader\\build\\loader\\Debug;$PATH"
                            CMAKE_BUILD_PARALLEL_LEVEL=2 NCNN_VULKAN=TRUE 
                            VULKAN_SDK=D:/a/ncnn-gpu-pre-verification/ncnn-gpu-pre-verification/Vulkan-Loader/external/Vulkan-Headers
          CIBW_BEFORE_ALL: git clone https://github.com/KhronosGroup/Vulkan-Loader.git &&
                           cd Vulkan-Loader && mkdir build && cd build &&
                           python3 ../scripts/update_deps.py --dir ../external --arch x86 --config debug &&
                           cmake -C ../external/helper.cmake -DCMAKE_BUILD_TYPE=Debug .. &&
                           cmake --build . &&
                           mklink /d "D:/a/ncnn-gpu-pre-verification/ncnn-gpu-pre-verification/Vulkan-Loader/external/Vulkan-Headers/build/install/lib"
                           "D:/a/ncnn-gpu-pre-verification/ncnn-gpu-pre-verification/Vulkan-Loader/build/loader/Debug"

          CIBW_BEFORE_BUILD: pip install delvewheel
          CIBW_REPAIR_WHEEL_COMMAND: delvewheel repair -w {dest_dir} {wheel}
        with:
          package-dir: ./ncnn-python-gpu
          output-dir: wheelhouse
